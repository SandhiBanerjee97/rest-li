buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url "https://linkedin.jfrog.io/artifactory/open-source"
    }
  }
  dependencies {
    classpath 'com.linkedin.pegasus:gradle-plugins:29.19.2'
  }
}

wrapper {
  gradleVersion = '5.0'
}

final pegasusVersion = '29.19.2'
ext.spec = [
        'product' : [
                'pegasus' : [
                        'data' : 'com.linkedin.pegasus:data:' + pegasusVersion,
                        'generator' : 'com.linkedin.pegasus:generator:' + pegasusVersion,
                        'r2Netty' : 'com.linkedin.pegasus:r2-netty:' + pegasusVersion,
                        'restliCommon' : 'com.linkedin.pegasus:restli-common:' + pegasusVersion,
                        'restliClient' : 'com.linkedin.pegasus:restli-client:' + pegasusVersion,
                        'restliServer' : 'com.linkedin.pegasus:restli-server:' + pegasusVersion,
                        'restliTools' : 'com.linkedin.pegasus:restli-tools:' + pegasusVersion,
                        'gradlePlugins' : 'com.linkedin.pegasus:gradle-plugins:' + pegasusVersion,
                        'restliNettyStandalone' : 'com.linkedin.pegasus:restli-netty-standalone:' + pegasusVersion,
                        'restliServerStandalone' : 'com.linkedin.pegasus:restli-server-standalone:' + pegasusVersion
                ]
        ]
]

allprojects {
  apply plugin: 'idea'
  apply plugin: 'eclipse'
}

ext.enablePDL=true

subprojects {
  apply plugin: 'maven-publish'

  afterEvaluate {
    // add the standard pegasus dependencies wherever the plugin is used
    if (project.plugins.hasPlugin('pegasus')) {
      dependencies {
        dataTemplateCompile spec.product.pegasus.data
        restClientCompile spec.product.pegasus.restliClient
      }
    }
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url "https://linkedin.jfrog.io/artifactory/open-source"
    }
  }
}